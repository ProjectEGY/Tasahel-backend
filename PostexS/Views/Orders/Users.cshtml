@model List<PostexS.Models.Domain.Order>
@using PostexS.Models.Enums;
@{
    ViewData["Title"] = "طلبات المستخدم";
    // var sender =
    // var Agent = Model.Sum(x => x.DeliveryCost);
    var AllArrivedCost = Model != null ? Model.Sum(x => x.ArrivedCost) : 0;
}
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-fw fa-globe"></i> طلبات المستخدم</h3>
    </div>
    @using (Html.BeginForm("Users", "Orders", FormMethod.Get))
    {
        <label for="StoreId" class="text-center">أختر المده </label>
        <input name="id" id="id" hidden value="@ViewBag.UserId" />
        <input name="type" id="type" hidden value="@ViewBag.typ" />
        <input name="pageSize" id="pageSize" value="@ViewBag.PageSize" hidden />
        <div class="row">
            <div class="col-lg-2 text-center"></div>
            <div class="col-lg-3">
                <input name="FilterTime" id="FilterTime" type="date" class="form-control"
                       value="@(ViewBag.FilterTime != null ? ((DateTime)ViewBag.FilterTime).ToString("yyyy-MM-dd") : "")" />
            </div>
            <div class="col-lg-2 text-center">
                <label style="vertical-align:central" class="text-center">إلــى</label>
            </div>
            <div class="col-lg-3">
                <input name="FilterTimeTo" id="FilterTimeTo" type="date" class="form-control"
                       value="@(ViewBag.FilterTimeTo != null ? ((DateTime)ViewBag.FilterTimeTo).ToString("yyyy-MM-dd") : "")" />
            </div>
            <div class="col-lg-2 text-center"></div>
            <div class="col-lg-5 text-center"></div>
            <div class="col-lg-2">
                <button type="submit" class="btn btn-primary form-control">بحــث</button>
            </div>
        </div>
    }


    <div class="row" style="margin-top:10px">
        <div class="row">
            <div class="col-lg-2"></div>
            <div class="col-lg-4">
                <form asp-action="Users" method="get">
                    <input name="id" id="id" value="@ViewBag.UserId" hidden />
                    <input name="type" id="type" value="@ViewBag.typ" hidden />
                    <input name="pageSize" id="pageSize" value="@ViewBag.PageSize" hidden />
                    <input name="FilterTime" id="FilterTime" type="hidden" value="@(ViewBag.FilterTime != null ? ((DateTime)ViewBag.FilterTime).ToString("yyyy-MM-dd") : "")" />
                    <input name="FilterTimeTo" id="FilterTimeTo" type="hidden" value="@(ViewBag.FilterTimeTo != null ? ((DateTime)ViewBag.FilterTimeTo).ToString("yyyy-MM-dd") : "")" />
                    <select class="form-control" required name="taswya" id="taswya">
                        <option value="completed">تم تسويتها </option>
                    </select>
                    <select class="form-control" required name="state" id="state">
                        <option value="wasalet">طلبات وصلت </option>
                        <option value="returned">طلبات مرتجع  </option>
                        <option value="refused">طلبات مرفوضة </option>
                    </select>
                    <button class="btn btnbtn-outline-info form-control" type="submit"> بحث </button>
                </form>
            </div>


            <div class="col-lg-4">
                <form asp-action="Users" method="get">
                    <input name="id" id="id" value="@ViewBag.UserId" hidden />
                    <input name="type" id="type" value="@ViewBag.typ" hidden />
                    <input name="pageSize" id="pageSize" value="@ViewBag.PageSize" hidden />
                    <select class="form-control" required name="taswya" id="taswya">
                        <option value="uncompleted">لم يتم تسويتها </option>
                    </select>
                    <select class="form-control" required name="state" id="state">
                        <option value="gdeda">طلبات جديده </option>
                        <option value="garya">طلبات جارية </option>
                        <option value="wasalet">طلبات وصلت </option>
                        <option value="wasaleteditprice">طلبات وصلت مع تعديل السعر </option>
                        <option value="returned">طلبات مرتجع  </option>
                        @* <option value="returnedPaid"> مرتجع ودفع شحن  </option>
                        <option value="returnedDeliveryONSender"> مرتجع وشحن على الراسل  </option> *@
                        <option value="refused">طلبات مرفوضة </option>
                        <option value="mo2gl">طلبات مؤجله </option>
                        <option value="closed">تم تقفيلها </option>
                        <option value="mo3l2">طلبات معلقة </option>
                        <option value="all"> الكل </option>
                    </select>
                    <button class="btn btnbtn-outline-info form-control" type="submit"> بحث </button>
                </form>
            </div>
            <div class="col-lg-2"></div>


        </div>



    </div>


    <div class="panel-body">
        <div id="accordion" class="panel-group" aria-multiselectable="true" role="tablist">
            <div class="panel panel-success">
                @if (TempData["CountryErrors"] != null)
                {
                    var Errors = TempData["CountryErrors"] as List<string>;
                    <div class="alert alert-danger text-center p-5 m-5">
                        <ul style="list-style:none;">
                            @foreach (var error in Errors)
                            {
                                <li>@error</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>

        <br />
        <!-- أضف هذا الكود قبل الجدول -->
        <div class="row" style="margin-bottom: 15px;">
            <div class="col-md-12">
                <label>البحث  :</label>
                <form method="get" action="@Url.Action("Users")">
                    <input name="id" value="@ViewBag.UserId" hidden />
                    <input name="type" value="@ViewBag.typ" hidden />
                    <input name="FilterTime" type="hidden" value="@(ViewBag.FilterTime != null ? ((DateTime)ViewBag.FilterTime).ToString("yyyy-MM-dd") : "")" />
                    <input name="FilterTimeTo" type="hidden" value="@(ViewBag.FilterTimeTo != null ? ((DateTime)ViewBag.FilterTimeTo).ToString("yyyy-MM-dd") : "")" />
                    <input name="state" type="hidden" value="@ViewContext.HttpContext.Request.Query["state"]" />
                    <input name="taswya" type="hidden" value="@ViewContext.HttpContext.Request.Query["taswya"]" />
                    <input name="pageSize" type="hidden" value="@ViewBag.PageSize" />

                    <div class="input-group">
                        <input type="text" name="searchTerm" class="form-control" placeholder="ابحث في: رقم الطلب، المرسل إليه، العنوان، المندوب، الملاحظات" value="@ViewContext.HttpContext.Request.Query["searchTerm"]">
                        <div class="input-group-btn">
                            <button class="btn btn-default" type="submit">
                                <i class="glyphicon glyphicon-search"></i>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <form asp-action="ExportToExecl" asp-controller="Orders">

            <div class="table-responsive">

                <div class="form-group">
                    <label>عناصر الصفحة :</label>
                    <select id="pageSizeSelect" class="form-control">
                        @{
                            var pageSizes = new List<int> { 0, 25, 50, 100, 500, 1000 };
                            foreach (var size in pageSizes)
                            {
                                <option value="@size" selected="@(ViewBag.PageSize == size ? "selected" : null)">
                                    @(size == 0 ? "عرض الكل" : size.ToString())
                                </option>
                            }
                        }
                    </select>
                </div>
                <br />
                <table id="table22" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th style="text-align:center">الحالة</th>
                            <th style="text-align:center">الحالة قبل التسوية</th>
                            <th style="text-align:center">رقم الطلب</th>
                            <th style="text-align:center ">التاريخ</th>
                            <th style="text-align:center "> الراسل</th>
                            <th style="text-align:center ">المرسل اليه</th>
                            <th style="text-align:center ">العنوان</th>
                            <th style="text-align:center ">المطلوب دفعه</th>
                            <th style="text-align:center ">تم دفعه</th>
                            <th style="text-align:center ">المندوب</th>
                            <th style="text-align:center ">الملاحظات</th>
                            <th style="text-align:center ">ملاحظات المندوب</th>
                            <th style="text-align:center "> تحديد</th>
                        </tr>
                    </thead>

                    <tbody style="text-align:center">
                        @* <button class="btn btn-info form-control" type="submit">  طباعة المحدد شيت اكسيل </button> *@
                        <div style="margin-bottom: 15px;">
                            <button onclick="prepareExport('selected')" class="btn btn-info" style="margin-left: 10px;">
                                <i class="fa fa-file-excel-o"></i>  Excel Sheet  تصدير المحدد فقط
                            </button>

                            @* <button onclick="prepareExport('all')" class="btn btn-success">
                                <i class="fa fa-file-excel-o"></i> تصدير كل النتائج
                            </button> *@
                        </div>
                        <br />
                        <label style="position:center">
                            <input type="checkbox" onClick="toggle(this)" title="حدد جميع الطلبات المعروضة" /> حدد جميع الطلبات المعروضة
                        </label>
                        @if (Model != null)
                        {
                            for (int i = 0; i < Model.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        @switch (Model[i].OrderCompleted)
                                        {
                                            case OrderCompleted.OK:
                                                <span class="badge g-light-blue">تم تسويتة</span>
                                                break;
                                            case OrderCompleted.NOK:
                                                <span class="badge bg-gray">لم يتم تسويتة</span>
                                                break;
                                        }
                                        @if (Model[i].CompletedOn.HasValue)
                                        {
                                            var OrderOn = TimeZoneInfo.ConvertTimeFromUtc(Model[i].CompletedOn.Value, TimeZoneInfo.FindSystemTimeZoneById("Egypt Standard Time"));
                                            <br />
                                            <span>@OrderOn.ToString("dd/MM/yyyy HH:mm")</span>
                                        }
                                    </td>
                                    <td>
                                        @if (Model[i].IsDeleted == true)
                                        {
                                            <span class="badge bg-red">محذوف</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Placed)
                                        {
                                            <span class="badge bg-gray">جديد</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.PartialReturned)
                                        {
                                            <span class="badge bg-yellow-active">مرتجع جزئي</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Returned)
                                        {
                                            <span class="badge bg-yellow">مرتجع كامل</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Returned_And_DeliveryCost_On_Sender)
                                        {
                                            <span class="badge bg-yellow">مرتجع وشحن على الراسل</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Returned_And_Paid_DeliveryCost)
                                        {
                                            <span class="badge bg-yellow">مرتجع ودفع شحن </span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Delivered_With_Edit_Price)
                                        {
                                            <span class="badge bg-blue-active">تم التوصيل مع تعديل السعر</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.PartialDelivered)
                                        {
                                            <span class="badge bg-blue-active">تم التوصيل جزئي</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Assigned)
                                        {
                                            <span class="badge bg-green">جارى التوصيل</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Delivered)
                                        {
                                            <span class="badge bg-blue-active">تم التوصيل</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Rejected)
                                        {
                                            <span class="badge bg-yellow">مرفوض</span>
                                        }
                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Waiting)
                                        {
                                            <span class="badge bg-orange">مؤجل</span>
                                        }

                                        else if (Model[i].Status == PostexS.Models.Enums.OrderStatus.Completed)
                                        {
                                            <span class="badge bg-light-blue">تم تسويته</span>
                                        }
                                    </td>
                                    <td>

                                        @(Model[i].Code)
                                    </td>

                                    <td style="width: 150px;">
                                        @{
                                            var CreatedOn = TimeZoneInfo.ConvertTimeFromUtc(Model[i].CreateOn, TimeZoneInfo.FindSystemTimeZoneById("Egypt Standard Time"));
                                        }
                                        <span dir="auto">@CreatedOn.ToString("dd MMM, yyyy")</span><br />
                                        <span dir="auto">@CreatedOn.ToString("hh:mm tt")</span>
                                    </td>
                                    <td style="width: 200px;">
                                        @Model[i].Client.Name
                                    </td>
                                    <td>@Model[i].ClientName</td>
                                    <td style="width:150px">@Model[i].Address</td>
                                    <td>
                                        @Model[i].TotalCost جنية
                                    </td>
                                    <td>
                                        @Model[i].ArrivedCost جنية
                                    </td>

                                    <td>
                                        @if (Model[i].DeliveryId != null)
                                        {
                                            @Model[i].Delivery.Name
                                            @Model[i].Delivery.PhoneNumber
                                        }
                                    </td>
                                    <td style="width:150px">@Model[i].Notes</td>
                                    <td style="width:150px">
                                        @if (Model[i].OrderNotes.Count > 0)
                                        {
                                            @Model[i].OrderNotes.OrderBy(x => x.Id).Last().Content
                                        }
                                    </td>
                                    <td>
                                        <input class="check-box" type="checkbox" name="OrdersId[]" value="@Model[i].Id">
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>

                @if (ViewBag.TotalPages > 1)
                {
                    <div class="row">
                        <div class="col-md-6">
                            <div class="dataTables_info" id="sample_1_info">
                                عرض @((ViewBag.CurrentPage - 1) * ViewBag.PageSize + 1) الي @Math.Min(ViewBag.CurrentPage * ViewBag.PageSize, ViewBag.TotalItems) من @ViewBag.TotalItems عنصر
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="dataTables_paginate paging_bootstrap_full_number">
                                <ul class="pagination" style="visibility: visible;">
                                    <!-- Previous Button -->
                                    @if (ViewBag.CurrentPage > 1)
                                    {
                                        <li class="prev">
                                            <a href="@Url.Action("Users", new {
                                id = ViewBag.UserId,
                                type = ViewBag.typ,
                                FilterTime = ViewBag.FilterTime,
                                FilterTimeTo = ViewBag.FilterTimeTo,
                                state = ViewContext.HttpContext.Request.Query["state"],
                                taswya = ViewContext.HttpContext.Request.Query["taswya"],
                                page = ViewBag.CurrentPage - 1,
                                pageSize = ViewBag.PageSize
                            })" title="Prev"><i class="fa fa-angle-left"></i></a>
                                        </li>
                                    }

                                    <!-- First Page -->
                                    @if (ViewBag.CurrentPage > 3)
                                    {
                                        <li>
                                            <a href="@Url.Action("Users", new {
                                id = ViewBag.UserId,
                                type = ViewBag.typ,
                                FilterTime = ViewBag.FilterTime,
                                FilterTimeTo = ViewBag.FilterTimeTo,
                                state = ViewContext.HttpContext.Request.Query["state"],
                                taswya = ViewContext.HttpContext.Request.Query["taswya"],
                                page = 1,
                                pageSize = ViewBag.PageSize
                            })">1</a>
                                        </li>
                                        <li class="disabled"><span>...</span></li>
                                    }

                                    <!-- Pages Around Current Page -->
                                    @{
                                        int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                                        int endPage = Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2);

                                        for (int i = startPage; i <= endPage; i++)
                                        {
                                            <li class="@(i == ViewBag.CurrentPage ? "active" : "")">
                                                <a href="@Url.Action("Users", new {
    id = ViewBag.UserId,
    type = ViewBag.typ,
    FilterTime = ViewBag.FilterTime != null ? ((DateTime)ViewBag.FilterTime).ToString("yyyy-MM-dd") : "",
    FilterTimeTo = ViewBag.FilterTimeTo != null ? ((DateTime)ViewBag.FilterTimeTo).ToString("yyyy-MM-dd") : "",
    state = ViewContext.HttpContext.Request.Query["state"],
    taswya = ViewContext.HttpContext.Request.Query["taswya"],
       searchTerm = ViewContext.HttpContext.Request.Query["searchTerm"], // أضف هذا السطر
 page = i,
    pageSize = ViewBag.PageSize
})">@i</a>
                                            </li>
                                        }
                                    }

                                    <!-- Last Page -->
                                    @if (ViewBag.CurrentPage < ViewBag.TotalPages - 2)
                                    {
                                        <li class="disabled"><span>...</span></li>
                                        <li>
                                            <a href="@Url.Action("Users", new {
                                id = ViewBag.UserId,
                                type = ViewBag.typ,
                                FilterTime = ViewBag.FilterTime,
                                FilterTimeTo = ViewBag.FilterTimeTo,
                                state = ViewContext.HttpContext.Request.Query["state"],
                                taswya = ViewContext.HttpContext.Request.Query["taswya"],
                                page = ViewBag.TotalPages,
                                pageSize = ViewBag.PageSize
                            })">@ViewBag.TotalPages</a>
                                        </li>
                                    }

                                    <!-- Next Button -->
                                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                    {
                                        <li class="next">
                                            <a href="@Url.Action("Users", new {
                                id = ViewBag.UserId,
                                type = ViewBag.typ,
                                FilterTime = ViewBag.FilterTime,
                                FilterTimeTo = ViewBag.FilterTimeTo,
                                state = ViewContext.HttpContext.Request.Query["state"],
                                taswya = ViewContext.HttpContext.Request.Query["taswya"],
                                page = ViewBag.CurrentPage + 1,
                                pageSize = ViewBag.PageSize
                            })" title="Next"><i class="fa fa-angle-right"></i></a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </form>

        <table class="table table-striped table-bordered table-hover">

            <tr>
                <td style="width:50%;text-align:left">
                    المبلغ المطلوب سداده :
                </td>
                <td style="width:50%;text-align:right;color:green">
                    @try
                    {
                        @if (ViewBag.type == 0)
                        {
                            <span>@AllArrivedCost جنية</span>
                        }
                        else
                        {
                            try
                            {
                                <span>@AllArrivedCost جنية</span>
                            }
                            catch
                            {
                                // ignored
                            }
                        }
                    }
                    catch
                    {
                        // ignored
                    }





                </td>

            </tr>
        </table>
    </div>
</div>
<script>
    function Delete(url) {
        swal({
            title: "هل متأكد؟",
            text: "عند مسح هذا الطلب سوف يتم نقله إلى الطلبات المحذوفة",
            icon: "warning",
            dangerMode: true
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    type: "Delete",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            setInterval('location.reload()', 2500);
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                })
            }
        })
    }
    function Resotre(url) {
        swal({
            title: "هل متأكد؟",
            text: "هل تريد استراجع هذا الطلب مرة أخرى",
            icon: "success"
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    type: "Delete",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            setInterval('location.reload()', 2500);
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                })
            }
        })
    }
</script>
<script>
    function toggle(source) {
        checkboxes = document.getElementsByName('OrdersId[]');
        for (var i = 0, n = checkboxes.length; i < n; i++) {
            checkboxes[i].checked = source.checked;
        }
    }
</script>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            $('#pageSizeSelect').change(function () {
                var pageSize = $(this).val();
                var filterTime = $('#FilterTime').val();
                var filterTimeTo = $('#FilterTimeTo').val();
                var state = '@ViewContext.HttpContext.Request.Query["state"]';
                var taswya = '@ViewContext.HttpContext.Request.Query["taswya"]';
                var searchTerm = '@ViewContext.HttpContext.Request.Query["searchTerm"]'; // أضف هذا السطر

                var url = '/Orders/Users/' + '@ViewBag.UserId' +
                          '?type=' + '@ViewBag.typ' +
                          '&FilterTime=' + encodeURIComponent(filterTime) +
                          '&FilterTimeTo=' + encodeURIComponent(filterTimeTo) +
                          '&state=' + encodeURIComponent(state) +
                          '&taswya=' + encodeURIComponent(taswya) +
                          '&searchTerm=' + encodeURIComponent(searchTerm) + // أضف هذا السطر
                          '&page=1' +
                          '&pageSize=' + pageSize;

                window.location.href = url;
            });
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>


        function prepareExport(exportType) {
            const selectedIds = exportType === 'selected'
                ? Array.from(document.querySelectorAll('input[name="OrdersId[]"]:checked')).map(x => parseInt(x.value))
                : Array.from(document.querySelectorAll('input[name="OrdersId[]"]')).map(x => parseInt(x.value));

            if (selectedIds.some(isNaN)) {
                Swal.fire('خطأ', 'توجد بيانات غير صالحة في الطلبات المحددة', 'error');
                return;
            }

            fetch('/Orders/StoreExportIds', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(selectedIds.filter(id => id > 0)) // تأكد من أن جميع الـ IDs صالحة
            })
            .then(response => {
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                return response.json();
            })
            .then(data => {
                if (!data.success) throw new Error(data.message);
                console.log("Exported IDs:", data);
                window.location.href = `/Orders/ExportToExecl?exportType=${exportType}`;
            })
            .catch(error => {
                console.error('Export Error:', error);
                Swal.fire('خطأ', `فشل التصدير: ${error.message}`, 'error');
            });
        }



    </script>
}