@model IEnumerable<PostexS.Models.Domain.Order>
@using PostexS.Models.Enums;
@{
    ViewData["Title"] = "طلبات المستخدم";
    Layout = "_MobileLayout";
    var sender = Model.Sum(x => x.ClientCost);
    var Agent = Model.Sum(x => x.DeliveryCost);
}

<div class="panel panel-primary">
<div class="panel-heading">
    <h3 class="panel-title"><i class="fa fa-fw fa-globe"></i> طلبات المستخدم</h3>
</div>
@using (Html.BeginForm("Users", "Orders", FormMethod.Get))
{
    <label for="StoreId" class="text-center">أختر المده </label>
    <input name="id" id="id" hidden value="@ViewBag.UserId"/>
    <input name="type" id="type" hidden value="@ViewBag.typ"/>
    <div class="row">

        <div class="col-lg-2 text-center">
        </div>
        <div class="col-lg-3">
            <input name="FilterTime" id="FilterTime" type="date" class="form-control"/>
        </div>
        <div class="col-lg-2 text-center">
            <label style="vertical-align:central" class="text-center">إلــى</label>
        </div>
        <div class="col-lg-3">
            <input name="FilterTimeTo" id="FilterTimeTo" type="date" class="form-control"/>
        </div>
        <div class="col-lg-2 text-center">
        </div>
        <div class="col-lg-5 text-center">
        </div>
        <div class="col-lg-2">
            <button type="submit" class="btn btn-primary form-control">بحــث</button>
        </div>
    </div>
}


<div class="row" style="margin-top:10px">
    <div class="row">
        <div class="col-lg-2"></div>
        <div class="col-lg-4">
            <form asp-action="Users" method="get">
                <select class="form-control" required name="taswya" id="taswya">
                    <option value="completed">تم تسويتها </option>
                </select>
                <select class="form-control" required name="state" id="state">
                    <option value="wasalet">طلبات وصلت </option>
                    <option value="refused">طلبات مرفوضة </option>
                </select>
                <input name="id" id="id" value="@ViewBag.UserId" hidden/>
                <input name="type" id="type" value="@ViewBag.typ" hidden/>

                <button class="btn btnbtn-outline-info form-control" type="submit"> بحث </button>
            </form>
        </div>


        <div class="col-lg-4">
            <form asp-action="Users" method="get">
                <select class="form-control" required name="taswya" id="taswya">
                    <option value="uncompleted">لم يتم تسويتها </option>
                </select>
                <select class="form-control" required name="state" id="state">
                    <option value="gdeda">طلبات جديده </option>
                    <option value="garya">طلبات جارية </option>
                    <option value="wasalet">طلبات وصلت </option>
                    <option value="refused">طلبات مرفوضة </option>
                    <option value="mo2gl">طلبات مؤجله </option>
                    <option value="closed">تم تقفيلها </option>
                    <option value="mo3l2">طلبات معلقة </option>
                    <option value="all"> الكل </option>
                </select>
                <input name="id" id="id" value="@ViewBag.UserId" hidden/>
                <input name="type" id="type" value="@ViewBag.typ" hidden/>

                <button class="btn btnbtn-outline-info form-control" type="submit"> بحث </button>
            </form>
        </div>
        <div class="col-lg-2"></div>


    </div>



</div>


<div class="panel-body">
    <div id="accordion" class="panel-group" aria-multiselectable="true" role="tablist">
        <div class="panel panel-success">
            @if (TempData["CountryErrors"] != null)
            {
                var Errors = TempData["CountryErrors"] as List<string>;
                <div class="alert alert-danger text-center p-5 m-5">
                    <ul style="list-style:none;">
                        @foreach (var error in Errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
    <div class="table-responsive">
        <table id="table" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-hover">
            <thead>
            <tr>
                <th style="text-align:center">الحالة</th>
                <th style="text-align:center">الحالة قبل التسوية</th>
                <th style="text-align:center">رقم الطلب</th>
                <th style="text-align:center ">المطلوب دفعه</th>
                <th style="text-align:center ">تم دفعه</th>
                <th style="text-align:center ">التاريخ</th>
                <th style="text-align:center ">العنوان</th>
                <th style="text-align:center "> الراسل</th>
                <th style="text-align:center ">المرسل اليه</th>
                <th style="text-align:center ">المندوب</th>
                <th style="text-align:center ">الملاحظات</th>
                <th style="text-align:center ">ملاحظات المندوب</th>
            </tr>
            </thead>
            <tbody style="text-align:center">
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @switch (item.OrderCompleted)
                        {
                            case OrderCompleted.OK:
                                <span class="badge g-light-blue">تم تسويتة</span>
                                break;
                            case OrderCompleted.NOK:
                                <span class="badge bg-gray">لم يتم تسويتة</span>
                                break;
                        }
                        @if (item.CompletedOn.HasValue)
                        {
                            var OrderOn = TimeZoneInfo.ConvertTimeFromUtc(item.CompletedOn.Value, TimeZoneInfo.FindSystemTimeZoneById("Egypt Standard Time"));
                            <br/>
                            <span>@OrderOn.ToString("dd/MM/yyyy HH:mm")</span>
                        }
                    </td>
                    <td>
                                @if (item.IsDeleted == true)
                                {
                                    <span class="badge bg-red">محذوف</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Placed)
                                {
                                    <span class="badge bg-gray">جديد</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.PartialReturned)
                                {
                                    <span class="badge bg-yellow-active">مرتجع جزئي</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned)
                                {
                                    <span class="badge bg-yellow">مرتجع كامل</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned_And_DeliveryCost_On_Sender)
                                {
                                    <span class="badge bg-yellow">مرتجع وشحن على الراسل</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned_And_Paid_DeliveryCost)
                                {
                                    <span class="badge bg-yellow">مرتجع ودفع شحن </span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Delivered_With_Edit_Price)
                                {
                                    <span class="badge bg-blue-active">تم التوصيل مع تعديل السعر</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.PartialDelivered)
                                {
                                    <span class="badge bg-blue-active">تم التوصيل جزئي</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Assigned)
                                {
                                    <span class="badge bg-green">جارى التوصيل</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Delivered)
                                {
                                    <span class="badge bg-blue-active">تم التوصيل</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Rejected)
                                {
                                    <span class="badge bg-yellow">مرفوض</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Waiting)
                                {
                                    <span class="badge bg-orange">مؤجل</span>
                                }

                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Completed)
                                {
                                    <span class="badge bg-light-blue">تم تسويته</span>
                                }
                    </td>
                    <td>

                        @(item.Code)
                    </td>

                    <td>
                        @item.TotalCost جنية
                    </td>
                    <td>
                        @item.ArrivedCost جنية
                    </td>

                    <td>
                        @{ var CreatedOn = TimeZoneInfo.ConvertTimeFromUtc(item.CreateOn, TimeZoneInfo.FindSystemTimeZoneById("Egypt Standard Time")); }
                        <span dir="auto">@CreatedOn.ToString("dd MMM, yyyy")</span><br/>
                        <span dir="auto">@CreatedOn.ToString("hh:mm tt")</span>
                    </td>
                            <td style="width:150px">
                                @item.AddressCity -  @item.Address
                            </td>
                    <td>@item.Client.Name</td>
                            <td>@item.ClientName <span class="badge bg-blue-active"> @item.ClientCode</span></td>
                    <td>
                        @if (item.DeliveryId != null)
                        {
                            @item.Delivery.Name
                            @item.Delivery.PhoneNumber
                        }
                    </td>
                    <td style="width:150px">@item.Notes</td>
                    <td style="width:150px">
                        @if (item.OrderNotes.Count > 0)
                        {
                            @item.OrderNotes.OrderBy(x => x.Id).Last().Content
                        }
                    </td>
                    @*<td>
            <a href="#" asp-action="Edit" asp-controller="City" asp-route-id="@item.Id">تعديل</a>
            <span>|</span>
            @if (ViewBag.State != "D")
            {
                <a onclick="Delete('Orders/Delete?id=@item.Id')">حذف</a>
            }
            else
            {
                <a onclick="Resotre('Orders/Delete?id=@item.Id')">إستعادة</a>
            }
        </td>*@
                </tr>
            }
            </tbody>
        </table>
        <table class="table table-striped table-bordered table-hover">


            <tr>
                <td style="width:50%;text-align:left">
                    المبلغ المطلوب سداده :
                </td>
                <td style="width:50%;text-align:right;color:green">
                    @try
                    {
                        @if (ViewBag.type == 0)
                        {
                            <span>@Model.Sum(x => x.ClientCost); جنية</span>
                        }
                        else
                        {
                            try
                            {
                                <span>Model.Sum(x => x.DeliveryCost); جنية</span>
                            }
                            catch
                            {
                                // ignored
                            }
                        }
                    }
                    catch
                    {
                        // ignored
                    }





                </td>

            </tr>
        </table>
    </div>
</div>
</div>
<script>
    function Delete(url) {
        swal({
            title: "هل متأكد؟",
            text: "عند مسح هذا الطلب سوف يتم نقله إلى الطلبات المحذوفة",
            icon: "warning",
            dangerMode: true
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    type: "Delete",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            setInterval('location.reload()', 2500);
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                })
            }
        })
    }
    function Resotre(url) {
        swal({
            title: "هل متأكد؟",
            text: "هل تريد استراجع هذا الطلب مرة أخرى",
            icon: "success"
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    type: "Delete",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            setInterval('location.reload()', 2500);
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                })
            }
        })
    }
</script>

@section Scripts{
    <partial name="_ValidationScriptsPartial"/>
}
