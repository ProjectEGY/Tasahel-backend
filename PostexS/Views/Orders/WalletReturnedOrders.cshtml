@model IEnumerable<PostexS.Models.Domain.Order>
@{
    ViewData["Title"] = "طلبات التسوية";
    var users = ViewBag.Drivers as List<PostexS.Models.Domain.ApplicationUser>;
    var branchs = ViewBag.Branchs as List<PostexS.Models.Domain.Branch>;

}
@using PostexS.Models.Enums;
<link href="~/css/completedwallet.css" rel="stylesheet" />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-fw fa-globe"></i> طلبات التسوية</h3>
    </div>
    <div class="panel-body">
        <div class="text-center" style="margin-bottom:10px;">
            <h4 style="margin:10px" class="no-print">
                <button type="button" onclick="window.print();" class="btn"><i class="fa fa-print"></i> طباعة</button>
            </h4>
        </div>
        <div class="table-responsive">
            <table @* id="table" *@ cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th style="text-align:center">الحالة</th>
                        <th style="text-align:center">رقم الطلب</th>
                        <th style="text-align:center">اسم الراسل</th>
                        <th style="text-align:center">اسم المرسل إلية</th>
                        <th style="text-align:center ">العنوان</th>
                        <th style="text-align:center ">مبلغ المرتجع</th>
                        <th style="text-align:center "> المندوب</th>
                        <th style="text-align:center ">الملاحظات</th>
                        @* <th style="text-align:center ">ملاحظات المندوب</th> *@
                    </tr>
                </thead>
                <tbody style="text-align:center">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @if (item.IsDeleted == true)
                                {
                                    <span class="badge bg-red">محذوف</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Placed)
                                {
                                    <span class="badge bg-gray">جديد</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.PartialReturned)
                                {
                                    <span class="badge bg-yellow-active">مرتجع جزئي</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned)
                                {
                                    <span class="badge bg-yellow">مرتجع كامل</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.PartialDelivered)
                                {
                                    <span class="badge bg-blue-active">تم التوصيل جزئي</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Assigned)
                                {
                                    <span class="badge bg-green">جارى التوصيل</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Delivered)
                                {
                                    <span class="badge bg-blue-active">تم التوصيل</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Rejected)
                                {
                                    <span class="badge bg-yellow">مرفوض</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Waiting)
                                {
                                    <span class="badge bg-orange">مؤجل</span>
                                }
                                @* else if (item.Status != PostexS.Models.Enums.OrderStatus.Completed && item.Finished == true)
                                {
                                    <span class="badge bg-blue">تم تقفيله</span>
                                } *@
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Completed)
                                {
                                    <span class="badge bg-light-blue">تم تسويته</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned_And_DeliveryCost_On_Sender)
                                {
                                    <span class="badge bg-yellow">مرتجع وشحن على الراسل</span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned_And_Paid_DeliveryCost)
                                {
                                    <span class="badge bg-yellow">مرتجع ودفع شحن </span>
                                }
                                else if (item.Status == PostexS.Models.Enums.OrderStatus.Delivered_With_Edit_Price)
                                {
                                    <span class="badge bg-blue-active">تم التوصيل مع تعديل السعر</span>
                                }
                                @switch (item.OrderCompleted)
                                {
                                    case OrderCompleted.OK:
                                        <span class="badge g-light-blue">تم تسويتة</span>
                                        break;
                                    case OrderCompleted.NOK:
                                        <span class="badge bg-gray">لم يتم تسويتة</span>
                                        break;
                                }
                                @if (item.CompletedOn.HasValue)
                                {
                                    var OrderOn = TimeZoneInfo.ConvertTimeFromUtc(item.CompletedOn.Value, TimeZoneInfo.FindSystemTimeZoneById("Egypt Standard Time"));
                                    <br />
                                    <span>@OrderOn.ToString("dd/MM/yyyy HH:mm")</span>
                                }
                            </td>
                            <td>
                                @(item.Code)
                            </td>

                            <td>@item.Client.Name</td>
                            <td>
                                @item.ClientName
                            </td>
                            <td style="width:150px">
                                @item.AddressCity
                                <span>@item.Address</span>
                            </td>
                            @if (item.Status == OrderStatus.Returned)
                            {
                                <td>
                                    @(item.TotalCost - item.ArrivedCost)
                                </td>
                            }
                            else if (item.Status == OrderStatus.PartialReturned)
                            {
                                <td>
                                    @(item.ReturnedCost)
                                </td>
                            }
                            <td>
                                @if (item.DeliveryId != null)
                                {
                                    @item.Delivery.Name
                                    @if (item.OrderNotes.Count > 0)
                                    {
                                        if (!string.IsNullOrWhiteSpace(item.OrderNotes.OrderBy(x => x.Id).Last().Content))
                                        {
                                            <hr />
                                            <span style="color:cadetblue">ملاحظات المندوب :</span>
                                            @item.OrderNotes.OrderBy(x => x.Id).Last().Content
                                        }
                                    }
                                }
                            </td>
                            <td style="width:150px">@item.Notes</td>
                            @*  <td style="width:150px">
                        @if (item.OrderNotes.Count > 0)
                        {
                        @item.OrderNotes.OrderBy(x => x.Id).Last().Content
                        }
                        </td> *@
                        </tr>
                    }
                </tbody>
            </table>
            <table class="table text-center table-bordered">
                <tr>
                    <td style="width:50%;text-align:left">
                        المبلغ المستحق للراسل :
                    </td>
                    <td style="width:50%;text-align:right;color:green">
                        @Model.Sum(x => x.ReturnedCost) جنية
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

