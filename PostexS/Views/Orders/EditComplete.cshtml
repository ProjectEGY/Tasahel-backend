@model IEnumerable<PostexS.Models.Domain.Order>
@{
    ViewData["Title"] = "تعجيل تسوية الشحنات";
    var senders = ViewBag.senders as List<PostexS.Models.Domain.ApplicationUser>;
}
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-fw fa-globe"></i> تسوية الشحنات</h3>
    </div>
    <div class="panel-body">
        <div id="accordion" class="panel-group" aria-multiselectable="true" role="tablist">
            <div class="panel panel-success">
                @if (TempData["CountryErrors"] != null)
                {
                    var Errors = TempData["CountryErrors"] as List<string>;
                    <div class="alert alert-danger text-center p-5 m-5">
                        <ul style="list-style:none;">
                            @foreach (var error in Errors)
                            {
                                <li>@error</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
          @if (!User.IsInRole("Client"))
          {
        <div class="row no-print">
          
            @using (Html.BeginForm("EditComplete", "Orders", FormMethod.Get))
            {
                <div class="form-group">
                    <label for="StoreId">برجاء اختيار الفرع</label>
                    <select name="UserIds" id="UserIds" class="select2 form-control" multiple>
                        @foreach (var user in senders)
                        {
                            <option value="@user.Id">@user.Name - @user.PhoneNumber</option>
                        }
                    </select>
                </div>
                <button type="submit" class="btn btn-info">اختيار</button>
            }
        </div>
          }
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @using (Html.BeginForm("EditComplete", "Orders", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
    <div class="table-responsive">
        <table id="table" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th style="text-align:center">تاريخ التسوية</th>
                    <th style="text-align:center">الحالة</th>
                    <th style="text-align:center">رقم الطلب</th>
                    <th style="text-align:center">ملاحظات</th>
                    <th style="text-align:center">اسم الراسل</th>
                    <th style="text-align:center">اسم المرسل إلية</th>
                    <th style="text-align:center">المندوب</th>
                    <th style="text-align:center ">تم تسديده</th>
                    <th style="text-align:center">نسبة الراسل</th>
                    <th style="text-align:center ">العنوان</th>
                    <th style="text-align:center">ملاحظات المندوب</th>
                </tr>
            </thead>
            <tbody style="text-align:center">
                @foreach (var item in Model)
                {
                <tr>
                    <td> 
                        @item.CompletedOn.ToString()
                    </td>
                    <td>
                                    @if (item.IsDeleted == true)
                                    {
                                        <span class="badge bg-red">محذوف</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Placed)
                                    {
                                        <span class="badge bg-gray">جديد</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.PartialReturned)
                                    {
                                        <span class="badge bg-yellow-active">مرتجع جزئي</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned)
                                    {
                                        <span class="badge bg-yellow">مرتجع كامل</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned_And_DeliveryCost_On_Sender)
                                    {
                                        <span class="badge bg-yellow">مرتجع وشحن على الراسل</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Returned_And_Paid_DeliveryCost)
                                    {
                                        <span class="badge bg-yellow">مرتجع ودفع شحن </span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Delivered_With_Edit_Price)
                                    {
                                        <span class="badge bg-blue-active">تم التوصيل مع تعديل السعر</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.PartialDelivered)
                                    {
                                        <span class="badge bg-blue-active">تم التوصيل جزئي</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Assigned)
                                    {
                                        <span class="badge bg-green">جارى التوصيل</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Delivered)
                                    {
                                        <span class="badge bg-blue-active">تم التوصيل</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Rejected)
                                    {
                                        <span class="badge bg-yellow">مرفوض</span>
                                    }
                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Waiting)
                                    {
                                        <span class="badge bg-orange">مؤجل</span>
                                    }

                                    else if (item.Status == PostexS.Models.Enums.OrderStatus.Completed)
                                    {
                                        <span class="badge bg-light-blue">تم تسويته</span>
                                    }
                    </td>
                    <td>

                        @(item.Code)
                    </td>
                    <td style="width: 150px">@item.Notes</td>
                    <td>

                        @item.Client.Name
                    </td>
                    <td>

                                    @item.ClientName <span class="badge bg-blue-active"> @item.ClientCode</span>
                    </td>
                    <td>
                        @if (item.DeliveryId != null)
                        {
                @item.Delivery.Name
                @item.Delivery.PhoneNumber
}
                    </td>
                    <td class="@(item.ArrivedCost!= item.TotalCost?"text-danger":"")">
                        @item.ArrivedCost
                    </td>
                    <td style="width: 80px">
                        <input type="hidden" name="OrderId[]" id="OrderId[]" value="@item.Id" />
                        <input @(User.IsInRole("Client")?"disabled":"") class="form-control " onkeyup="GetCost()" required type="number" name="DeliveryCost[]" id="DeliveryCost[]" value="@item.ClientCost" />


                    </td>
                    <td style="width: 150px">
                                    @item.AddressCity -  @item.Address
                    </td>
                    
                    <td style="width:150px">
                        @if (item.OrderNotes.Count > 0)
                        {
                            @item.OrderNotes.OrderBy(x => x.Id).Last().Content
                        }
                    </td>
                        @*<td>
                <a href="#" asp-action="Edit" asp-controller="City" asp-route-id="@item.Id">تعديل</a>
                <span>|</span>
                @if (ViewBag.State != "D")
                {
                    <a onclick="Delete('Orders/Delete?id=@item.Id')">حذف</a>
                }
                else
                {
                    <a onclick="Resotre('Orders/Delete?id=@item.Id')">إستعادة</a>
                }
            </td>*@
                </tr>
                }

            </tbody>
        </table>
        <table class="table table-striped table-bordered table-hover">
            <tr>
                <td style="width:50%;text-align:left">
                    المبلغ المستحق للراسل :
                </td>
                <td id="cost" style="width:50%;text-align:right;color:green">
                </td>

            </tr>
        </table>
        <div class="no-print">
             @if (!User.IsInRole("Client"))
            {
            <p class="text-danger">سيتم نقلك إلى صفحة الطباعه عند تسويتها</p>
            <p>عند تسوية الطلبات سيتم تقفيل الطلبات فقط عندما يكون نسبة الراسل اكبر من او يساوي 0 جنية</p>
             }
          @*  <button type="button" onclick="window.print();" class="btn"><i class="fa fa-print"></i> طباعة</button>*@
            @if (!User.IsInRole("Client"))
            {
            <input type="submit" class="btn btn-primary" onclick="return confirm('هل  تريد تسويتهاو سيتم نقلك إلى صفحة الطباعه ?')" value="تسوية الطلبات" />
            }
        </div>
    </div>
        }
    </div>
</div>
<script>
    function Delete(url) {
        swal({
            title: "هل متأكد؟",
            text: "عند مسح هذا الطلب سوف يتم نقله إلى الطلبات المحذوفة",
            icon: "warning",
            dangerMode: true
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    type: "Delete",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            setInterval('location.reload()', 2500);
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                })
            }
        })
    }
    function Resotre(url) {
        swal({
            title: "هل متأكد؟",
            text: "هل تريد استراجع هذا الطلب مرة أخرى",
            icon: "success"
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    type: "Delete",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            setInterval('location.reload()', 2500);
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                })
            }
        })
    }
</script>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">

        $(document).ready(function () {
            GetCost();
        });
        function GetCost() {
            let cost = document.getElementsByName('DeliveryCost[]');
            let writ = document.getElementById("cost");
            let num = 0;
            for (var x = 0; x < cost.length; x++)
            {
                if (parseInt(cost[x].value)) {
                    num += parseInt(cost[x].value);
                }
            }
            writ.innerHTML = "";
            writ.innerHTML = num +" "+ "جنية";
        }
    </script>
}