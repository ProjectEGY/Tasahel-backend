@model PostexS.Models.Domain.Order
@{
    ViewBag.Title = "تفاصيل الطلب رقم " + (Model.Code);
    var CreatedOn = TimeZoneInfo.ConvertTimeFromUtc(Model.CreateOn, TimeZoneInfo.FindSystemTimeZoneById("Egypt Standard Time"));
}
<div class="row">
    <div class="col-md-12">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title no-print">@ViewBag.Title</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>
            </div><!-- /.box-header -->
            <div class="box-body">
                <div class="text-center" style="margin-bottom:10px;">
                    @if (Model.BarcodeImage != null)
                    {
                        <img src="data:image/png;base64,@Convert.ToBase64String(Model.BarcodeImage)" alt="Barcode" style="position: absolute;right: 20px; margin-top:0px;">
                    }
                    <h4 style="margin-bottom:20px;">الطلب رقم @(Model.Code)</h4>
                    <div>
                        <h4 style="margin:10px">
                            @if (Model.IsDeleted == true)
                            {
                                <span class="badge bg-red">محذوف</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Placed)
                            {
                                <span class="badge bg-gray">جديد</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.PartialReturned)
                            {
                                <span class="badge bg-yellow-active">مرتجع جزئي</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Returned)
                            {
                                <span class="badge bg-yellow">مرتجع كامل</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Returned_And_DeliveryCost_On_Sender)
                            {
                                <span class="badge bg-yellow">مرتجع وشحن على الراسل</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Returned_And_Paid_DeliveryCost)
                            {
                                <span class="badge bg-yellow">مرتجع ودفع شحن </span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Delivered_With_Edit_Price)
                            {
                                <span class="badge bg-blue-active">تم التوصيل مع تعديل السعر</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.PartialDelivered)
                            {
                                <span class="badge bg-blue-active">تم التوصيل جزئي</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Assigned)
                            {
                                <span class="badge bg-green">جارى التوصيل</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Delivered)
                            {
                                <span class="badge bg-blue-active">تم التوصيل</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Rejected)
                            {
                                <span class="badge bg-yellow">مرفوض</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Waiting)
                            {
                                <span class="badge bg-orange">مؤجل</span>
                            }
                            else if (Model.Status == PostexS.Models.Enums.OrderStatus.Completed)
                            {
                                <span class="badge bg-light-blue">تم تسويته</span>
                            }
                        </h4>
                        <h4 style="margin:10px" class="no-print">
                            <br />
                            <a href="/Orders/Index" class="btn btn-default no-print">العودة</a>
                            <button type="button" onclick="markAndPrint('normal', @Model.Id);" class="btn btn-default"><i class="fa fa-print"></i> طباعة عادية</button>
                            <button type="button" onclick="markAndPrint('thermal', @Model.Id);" class="btn btn-primary"><i class="fa fa-print"></i> طباعة حرارية</button>
                        </h4>
                    </div>
                </div>
                <div>
                    <table class="table text-center table-bordered" dir="rtl">
                        <tbody>
                            <tr>
                                <td style="width:40%">
                                    <span>الراسل</span>
                                    <br />
                                    <p>@Model.Client.Name</p>
                                    <p>الهاتف :  <a dir="auto" href="tel:@Model.Client.PhoneNumber">@Model.Client.PhoneNumber</a> </p>
                                </td>
                                <td style="width:20%">
                                    <img src="~/Content/Images/TasahelExpress.png" width="150" height="110" />
                                </td>
                                <td style="width:40%">
                                    <span>المرسل إليه</span>
                                    <br />
                                    <p>@Model.ClientName</p>
                                    <p>الهاتف :  <a dir="auto" href="tel:@Model.ClientPhone">@Model.ClientPhone</a> </p>
                                    <p>العنوان : @Model.AddressCity - @Model.Address</p>
                                </td>
                            </tr>
                            <tr>
                                <td style="text-align:center">
                                    ملاحظات
                                    @foreach (var item in Model.OrderNotes)
                                    {
                                        @item.Content
                                    }
                                </td>
                                @if (@Model.Status != PostexS.Models.Enums.OrderStatus.PartialReturned)
                                {
                                    <td>
                                        <span>الاجمالي : @Model.TotalCost جنية</span>
                                        @if (Model.Status == PostexS.Models.Enums.OrderStatus.PartialDelivered)
                                        {
                                            <br />
                                            <span style="text-align:right">إستلام : @Model.ArrivedCost جنية</span>
                                            <br />
                                            <span style="text-align:left">مرتجع : @(Model.ReturnedCost) جنية</span>
                                        }
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <span>الاجمالي : @Model.ClientCost جنية</span>
                                    </td>
                                }
                                <td>@Model.Notes</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <a href="/Orders/Index" class="btn btn-default no-print">العودة</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function markAndPrint(type, orderId) {
            console.log("Order ID:", orderId); // Debugging: Log the orderId

            if (!orderId) {
                alert('معرف الطلب غير موجود أو غير صالح');
                return;
            }

            var orderIds = [orderId];
            console.log("Order IDs array:", orderIds); // Debugging: Log the orderIds array

            $.ajax({
                type: 'POST',
                url: '/Orders/MarkAsPrinted',
                contentType: 'application/json',
                data: JSON.stringify(orderIds),
                success: function (data) {
                    console.log("AJAX Success:", data); // Debugging: Log server response
                    if (data.success) {
                        if (type === 'normal') {
                            console.log("Performing normal print");
                            window.print();
                        } else {
                            console.log("Performing thermal print");
                            printThermal();
                        }
                    } else {
                        alert('خطأ في تحديث حالة الطباعة: ' + (data.message || 'غير معروف'));
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", status, error, xhr.responseText); // Debugging: Log error details
                    alert('خطأ في الاتصال بالسيرفر: ' + error);
                }
            });
        }

        function printThermal() {
            var originalContent = document.body.innerHTML;

            var thermalContent = `
                <div style="width:72.1mm; max-height:297mm; margin:0 auto; padding:1mm; font-size:11px; font-family:Arial; line-height:1.3;">
                    <div style="text-align:center; margin-bottom:3px;">
                        <img src="@Url.Content("~/Content/Images/TasahelExpress.png")" style="width:60mm; max-height:25mm; object-fit:contain; margin:0 auto; display:block;" />
                        <div style="font-size:10px; margin-top:2px;">@CreatedOn.ToString("yyyy/MM/dd hh:mm tt")</div>
                    </div>

        @if (Model.BarcodeImage != null)
        {
                                <div style="text-align:center; margin:3px 0;">
                                    <img src="data:image/png;base64,@Convert.ToBase64String(Model.BarcodeImage)" alt="Barcode" style="width:60mm; max-height:15mm; object-fit:contain;">
                                </div>
        }

                    <hr style="border-top:1px dashed #000; margin:3px 0;">

                    <div style="margin-bottom:3px;">
                        <div><strong>الراسل:</strong> @Model.Client.Name</div>
                        <div><strong>الهاتف:</strong> @Model.Client.PhoneNumber</div>
                    </div>

                    <div style="margin-bottom:3px;">
                        <div><strong>المستلم:</strong> @Model.ClientName</div>
                        <div><strong>الهاتف:</strong> @Model.ClientPhone</div>
                        <div><strong>العنوان:</strong> @Model.AddressCity - @Model.Address</div>
                    </div>

                    <hr style="border-top:1px dashed #000; margin:3px 0;">

                    <div style="margin-bottom:3px;">
                        <div><strong>الحالة:</strong>
        @if (Model.IsDeleted == true)
        {
                                        <span>محذوف</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Placed)
        {
                                        <span>جديد</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.PartialReturned)
        {
                                        <span>مرتجع جزئي</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Returned)
        {
                                        <span>مرتجع كامل</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Returned_And_DeliveryCost_On_Sender)
        {
                                        <span>مرتجع وشحن على الراسل</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Returned_And_Paid_DeliveryCost)
        {
                                        <span>مرتجع ودفع شحن</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Delivered_With_Edit_Price)
        {
                                        <span>تم التوصيل مع تعديل السعر</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.PartialDelivered)
        {
                                        <span>تم التوصيل جزئي</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Assigned)
        {
                                        <span>جارى التوصيل</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Delivered)
        {
                                        <span>تم التوصيل</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Rejected)
        {
                                        <span>مرفوض</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Waiting)
        {
                                        <span>مؤجل</span>
        }
        else if (Model.Status == PostexS.Models.Enums.OrderStatus.Completed)
        {
                                        <span>تم تسويته</span>
        }
                        </div>
                    </div>

                    <hr style="border-top:1px dashed #000; margin:3px 0;">

                    <div style="margin-bottom:3px;">
                        <div><strong>الإجمالي:</strong> @Model.TotalCost جنية</div>
        @if (Model.Status == PostexS.Models.Enums.OrderStatus.PartialDelivered)
        {
                                    <div><strong>إستلام:</strong> @Model.ArrivedCost جنية</div>
                                    <div><strong>مرتجع:</strong> @Model.ReturnedCost جنية</div>
        }
                    </div>

                    <hr style="border-top:1px dashed #000; margin:3px 0;">

                    <div style="margin-bottom:3px; word-wrap:break-word;">
                        <div><strong>ملاحظات:</strong></div>
        @if (Model.Notes != null && !string.IsNullOrEmpty(Model.Notes))
        {
                                    <div style="word-wrap:break-word; max-width:68mm;">@Model.Notes</div>
        }
        @foreach (var item in Model.OrderNotes)
        {
                if (!string.IsNullOrEmpty(item.Content))
                {
                                                <div style="word-wrap:break-word; max-width:68mm;">@item.Content</div>
                }
        }
        @if (string.IsNullOrEmpty(Model.Notes) && !Model.OrderNotes.Any(note => !string.IsNullOrEmpty(note.Content)))
        {
                                    <div>لا توجد ملاحظات</div>
        }
                    </div>

                    <hr style="border-top:1px dashed #000; margin:3px 0;">

                    <div style="text-align:center; margin-top:3px;">
                        <div>شكراً لاستخدامكم خدماتنا</div>
                    </div>
                </div>
            `;

            document.body.innerHTML = thermalContent;
            setTimeout(function() {
                window.print();
                document.body.innerHTML = originalContent;
            }, 200);
        }
    </script>
}